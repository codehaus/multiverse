allprojects {
  apply plugin: 'base'
  apply plugin: 'java'
  apply plugin: 'maven'
  apply plugin: 'project-reports'

  install.dependsOn ':build'
  defaultTasks 'clean', 'install'

  sourceCompatibility = 1.6
  version = '0.7-SNAPSHOT'
  asmversion = '3.3'
  group = 'org.multiverse'

  def localMavenRepo = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath

  repositories {
    mavenRepo urls: localMavenRepo
    mavenCentral()
    mavenRepo(urls: [
            'http://snapshots.repository.codehaus.org',
            'http://download.java.net/maven/2/',
            'https://maven.atlassian.com/content/groups/public'])
  }

  configurations {
    deployerJars
  }

  test {
    exclude("**/*AbstractTest*")
    exclude("**/*Benchmark*")
    exclude("**/*StressTest*")
    exclude("**/*LongTest*")
    exclude("**/*PerformanceTest*")
    exclude("**/*performanceTest*")
  }

  task shortintegrationtest(type: Test) {
    include("**/*StressTest*")
    include("**/*stressTest*")
    include("**/*LongTest*")
    include("**/*longTest*")
  }

  task integrationtest(type: Test) {
    include("**/*StressTest*")
    include("**/*stressTest*")
    include("**/*LongTest*")
    include("**/*longTest*")
  }

  dependencies {
    compile group: 'junit', name: 'junit', version: '4.8.1'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.8.2'
    deployerJars group: 'org.apache.maven.wagon', name: 'wagon-webdav-jackrabbit', version: '1.0-beta-6'
  }   

//  uploadArchives {
//   repositories.mavenDeployer {
//      configuration = configurations.deployerJars
//      repository(id: 'multiverse-releases', url: 'dav:https://dav.codehaus.org/repository/multiverse/') {
//        authentication(userName: releaseRepoUsername, password: releaseRepoPassword)
//      }
//      snapshotRepository(id: 'multiverse-snapshots', url: 'dav:https://dav.codehaus.org/snapshots.repository/multiverse/') {
//        authentication(userName: snapshotRepoUsername, password: snapshotRepoPassword)
//      }
//    }
//  }

//  gradle.taskGraph.whenReady {graph ->
//    if (graph.hasTask(uploadArchives)) {
//      snapshotRepoUsername
//      snapshotRepoPassword
//      releaseRepoUsername
//      releaseRepoPassword
//    }
//  }
}

project(':multiverse') {

  configurations {
    testFixtures {
      extendsFrom testRuntime
    }
  }

  shortintegrationtest {
    jvmArgs = ["-Dorg.multiverse.integrationtest.durationMs=10000", "-Dorg.multiverse.bugshaker.enabled=true"]
  }

}
