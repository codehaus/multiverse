<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>multiverse-alpha</artifactId>
    <name>Alpha Multiverse STM engine</name>
    <description>
        Contains the main Multiverse STM Implementation: the Alpha Engine. The Alpha engine supports
        readonly and update transactions. It also supports the retry/or else mechanism.
    </description>

    <parent>
        <groupId>org.multiverse</groupId>
        <artifactId>multiverse</artifactId>
        <version>0.5-SNAPSHOT</version>
    </parent>

    <properties>
        <multiverse.agentname>test-javaagent</multiverse.agentname>
        <multiverse.agentclass>org.multiverse.javaagent.MultiverseJavaAgent</multiverse.agentclass>
        <multiverse.instrumentor>org.multiverse.stms.alpha.instrumentation.AlphaStmInstrumentor</multiverse.instrumentor>
        <multiverse.compiler>org.multiverse.compiler.MultiverseCompiler</multiverse.compiler>
    </properties>

    <build>
        <plugins>
            <!--plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>creating the jar for the ide</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <echo message="Creating the jar that can be used by the ide"/>

                                <move failonerror="false" file="${project.build.directory}/${multiverse.agentname}.jar" tofile="${project.build.directory}/${multiverse.agentname}.moved.jar"/>

                                <jar destfile="${project.build.directory}/${multiverse.agentname}2.jar"
                                     basedir="${project.build.directory}/classes">
                                    <manifest>
                                        <attribute name="Premain-class" value="${multiverse.agentclass}"/>
                                    </manifest>
                                </jar>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin-->

            <!-- unpacks the dependant jars in the target/classes directory -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                            <excludeArtifactIds>junit,mockito-all,gson,multiverse-benchy</excludeArtifactIds>
                            <excludes>**/*Test.class</excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- 'preinstruments' the transactional classes so multiverse-asm library can
                be used without instrumentation -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.1.1</version>
                <executions>
                    <!-- responsible for transforming target/classes-->
                    <execution>
                        <id>preinstrument-classes</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>${multiverse.compiler}</mainClass>
                            <arguments>
                                <argument>-d</argument>
                                <argument>${multiverse.instrumentor}</argument>
                                <argument>${project.build.outputDirectory}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- responsible for transforming target/test-classes-->
                    <execution>
                        <id>preinstrument-test-classes</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>${multiverse.compiler}</mainClass>
                            <arguments>
                                <!-- argument>-classpath</argument -->
                                <!-- argument>
                                    <classpath/>
                                </argument -->
                                <argument>-d</argument>
                                <!--argument>-v</argument -->
                                <argument>${multiverse.instrumentor}</argument>
                                <argument>${project.build.testOutputDirectory}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>

            </plugin>

            <!-- creates the jar -->
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Premain-Class>${multiverse.agentclass}</Premain-Class>
                        </manifestEntries>
                    </archive>
                </configuration>
                <!-- also executes by default in the package phase -->
                <executions>
                    <execution>
                        <id>generate-ide-agent</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <finalName>${multiverse.agentname}</finalName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- plugin that integrates the asm/args4j libraries to create big fat jar-->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>repackage-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <echo message="Executing JarJar..."/>
                                <taskdef name="jarjar" classname="com.tonicsystems.jarjar.JarJarTask"/>
                                <jarjar destfile="${project.build.directory}/${project.build.finalName}.${project.packaging}"
                                        update="true">
                                    <rule pattern="org.objectweb.asm.**"
                                          result="${project.groupId}.repackaged.@0"/>
                                    <rule pattern="org.kohsuke.args4j.**"
                                          result="${project.groupId}.repackaged.@0"/>
                                </jarjar>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.tonicsystems.jarjar</groupId>
                        <artifactId>jarjar</artifactId>
                        <version>1.0-rc8</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>

        <resources>
            <resource>
                <directory>${project.build.outputDirectory}</directory>
            </resource>
        </resources>
    </build>

    <dependencies>
        <!-- Multiverse dependencies -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>multiverse-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>multiverse-instrumentation</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>multiverse-benchy</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- we also want access to the jar containing the test code from the multiverse-core project -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>multiverse-core</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>multiverse-instrumentation</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>multiverse-instrumentation</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>1.4</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>args4j</groupId>
            <artifactId>args4j</artifactId>
            <version>${args4j.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- ASM dependencies -->
        <dependency>
            <groupId>asm</groupId>
            <artifactId>asm</artifactId>
            <version>${asm.version}</version>
        </dependency>
        <dependency>
            <groupId>asm</groupId>
            <artifactId>asm-tree</artifactId>
            <version>${asm.version}</version>
        </dependency>
        <dependency>
            <groupId>asm</groupId>
            <artifactId>asm-analysis</artifactId>
            <version>${asm.version}</version>
        </dependency>
        <dependency>
            <groupId>asm</groupId>
            <artifactId>asm-commons</artifactId>
            <version>${asm.version}</version>
        </dependency>
        <dependency>
            <groupId>asm</groupId>
            <artifactId>asm-util</artifactId>
            <version>${asm.version}</version>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>stress</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <argLine>-javaagent:${project.build.directory}/${multiverse.agentname}.jar</argLine>
                            <includes>
                                <include>**/*LongTest.java</include>
                            </includes>
                            <argLine>-Xmx256m</argLine>
                            <forkMode>once</forkMode>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
