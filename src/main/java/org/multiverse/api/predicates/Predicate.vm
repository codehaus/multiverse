package org.multiverse.api.predicates;

/**
 * A predicate that checks if some value leads to true or false.
 *
 * @author Peter Veentjer.
 */
#if(${transactionalObject.referenceInterface} eq 'Ref')
public interface ${transactionalObject.predicateClass}${transactionalObject.typeParameter}{

    ${transactionalObject.predicateClass} IS_NOT_NULL_PREDICATE = new ${transactionalObject.predicateClass}(){
        public boolean evaluate(Object value){
            return value != null;
        }
    };

    ${transactionalObject.predicateClass} IS_NULL_PREDICATE = new ${transactionalObject.predicateClass}(){
        public boolean evaluate(Object value){
            return value == null;
        }
    };

    /**
     * Evaluates the predicate.
     *
     * @param value the value to evaluate.
     * @return true or false.
     */
    boolean evaluate(${transactionalObject.type} value);
}
#else
public abstract class ${transactionalObject.predicateClass} implements Predicate<${transactionalObject.objectType}>{

    /**
     * Evaluates the predicate
     *
     * @param current the current value.
     * @return true or false.
     */
    public abstract boolean evaluate(${transactionalObject.type} current);

    @Override
    public final boolean evaluate(${transactionalObject.objectType} arg) {
        return evaluate((${transactionalObject.type}) arg);
    }
}
#end
