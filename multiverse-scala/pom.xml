<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <name>Multiverse Scala Integration</name>
    <description>Scala classes to allow more elegant use of Multiverse from Scala. Atm the functionality
        is quite limited since not a lot of effort was put in the Scala integration. For the 0.6 release
        Multiverse should be able to work with in Scala written transactional objects configured with
        the Multiverse annotations. So that would reduce the need for this library, although in Scala
        they want to have special Scala 'interfaces' that provide some syntactic sugar to use java collections
        in Scala. So this module would be the good location for that. If anyone would like to help
        improving the Multiverse/Scala integration, please don't hesitate to join.
    </description>
    <artifactId>multiverse-scala</artifactId>

    <parent>
        <groupId>org.multiverse</groupId>
        <artifactId>multiverse</artifactId>
        <version>0.5.2-SNAPSHOT</version>
    </parent>
   <version>0.5.2-SNAPSHOT</version>
  

    <repositories>
        <repository>
            <id>scala.tools</id>
            <name>Scala tools</name>
            <url>http://www.scala-tools.org/repo-releases/</url>
        </repository>
    </repositories>

    <build>
        <sourceDirectory>src/main/scala</sourceDirectory>
        <testSourceDirectory>src/test/scala</testSourceDirectory>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <version>2.10.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <jvmArgs>
                        <jvmArg>-Xmx1024m</jvmArg>
                    </jvmArgs>
                    <args>
                        <arg>-unchecked</arg>
                        <arg>-deprecation</arg>
                        <arg>-Xno-varargs-conversion</arg>
                    </args>
                    <scalaVersion>${scala.version}</scalaVersion>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <includes>
                        <include>**/*Spec.java</include>
                    </includes>
                    <forkMode>once</forkMode>
                </configuration>
            </plugin>
            <!-- Clover fails when trying to recompile already compiled tests in
              its forked lifecycle -->
            <plugin>
                <groupId>com.atlassian.maven.plugins</groupId>
                <artifactId>maven-clover2-plugin</artifactId>
                <executions>
                    <execution>
                        <id>verify</id>
                        <!-- Phase "none" looks like a hack but there are others using it.
                          See e.g. http://jira.codehaus.org/browse/MSOURCES-51. -->
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <properties>
        <scala.version>2.7.7</scala.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>multiverse-core</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest</artifactId>
            <version>1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>multiverse-alpha</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
