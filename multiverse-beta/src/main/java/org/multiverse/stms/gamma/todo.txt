--------------------------------------------------------------------
                        to do
--------------------------------------------------------------------

- conflict detection & fast conflict detection beginning if the richmans conflict scan is used.

- commute: while commuting, no transaction accessed allowed.

- readonly/readbiased

- listeners

- permanent listeners

- pre/post start listeners and fat gamma block

- look at the unlock after a write.

- commute and locking

- when a transaction commits, how often does it need to send out a globalconflictcounter.inc. Can't this be done once?

- constructing objects and check for read consistency.

--------------------------------------------------------------------
                        done
--------------------------------------------------------------------

- lean loads now also have the correct version/ref/version read.

- downsizing of the map transaction on hard reset.

- selecting the right map transaction size based on previous executions.

- set abortonly needs to be speculative, so not available on the lean transactions.

- last readwrite conflict should show which transactional object caused it.

- stacktrace is not filled for reused transactions. This helps to prevent developers from looking in the wrong place.

- GammaDoubleRef.atomicGetAndIncrement

- GammaIntRef.atomicIncrement

- check read+locklevel & write+locklevel
