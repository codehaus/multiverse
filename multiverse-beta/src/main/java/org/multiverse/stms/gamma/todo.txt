- fast 'write' on orec.depart when exclusive lock and no surplus

- fast readset validation on committing transaction if the conflict counter has not changed
needs more research.

- stripe of conflict counters.

- optimize the tx-pool logic (instead of using an array, use a single linked list)..
transactions can also act as node (no need to introduce additional datastructures).

--------------------------------------------------------------------
                        to do
--------------------------------------------------------------------

- testing: prepare of transactions and excusive lock isolation level

- listeners & exceptions

- pre/post start listeners and fat gamma block

- testing: commute and locking

- testing: atomic change operations and globalconflictcounter increment
    - intref
    - booleanref
    - longref
    - doubleref
    - def

- testing: local conflict counter should be set if needed when the flatten commute is called.

- improved testing for the repeatable read isolation level

- adding read committed isolation level

- testing: lean transaction and readonly? no checking is done but what if configured as readonly

- implement the read committed isolation level

- testing:GammaRef_atomicGetAndSetTest

- testing:GammaRef_atomicAlterAndGetTest

- testing:GammaRef_atomicGetAndAlterTest

- testing:GammaRef_commuteTest

- testing:GammaRef_getAndAlterTest

- testing:Lock.acquire0Test

- testing:Lock_getLockMode0Test

- testing:PhantomReadTest

--------------------------------------------------------------------
                        done
--------------------------------------------------------------------

- testing: post commit listener

- testing: post abort listener

- testing: pre-prepare listener

- testing: getAndLock

- testing: getAndSetAndLock

- testing: setAndLock.

- implement the getAndLock, setAndLock and the getAndSetAndLock

- testing: commute: while commuting, no transaction accessed allowed.

- ordering of get/set/getandset in ref

- orelse

- commute: while commuting, no transaction accessed allowed.

- commute and locking

- local conflict counter should be set if needed when the flatten commute is called.

- GammaRef_alterAndGet1Test

- GammaRef_alterAndGet2Test

- remove duplication from the openForWrite (should do the loading part by the openForRead and add additional
checks itself).

- try locking was removed (moved to 0.8).

- ensure now also is part of the speculative stuff.
